help("Greene2003", package = "AER")
help("CameronTrivedi1998", package = "AER")
data("SwissLabor")
library(AER)
data("SwissLabor")
swiss = SwissLabor
summary(swiss)
plt = ggplot(swiss, aes(income)) + geom_density()
install.packages("ggplot")
install.packages("ggplot2")
library(ggplot2)
data("SwissLabor")
swiss = SwissLabor
summary(swiss)
plt = ggplot(swiss, aes(income)) + geom_density()
plt
plt = ggplot(swiss, aes(income,color=participation)) + geom_density()
plt
plt = ggplot(swiss, aes(income,color=participation)) + geom_density(size=2)
plt
library(AER)
plt = ggplot(swiss, aes(income)) +  geom_histogram()
plt
plt = ggplot(swiss, aes(income)) +  geom_histogram() + facet_grid(participation~.)
plt
plt_age = ggplot(swiss, aes(age)) +  geom_histogram() + facet_grid(participation~.)
plt_age
summary(swiss$age)
plt_age = ggplot(swiss, aes(10*age)) +  geom_histogram() + facet_grid(participation~.)
plt_age
summary(swiss)
plt_educ = ggplot(swiss, aes(education)) +  geom_histogram() + facet_grid(participation~.)
plt_educ
mtlong <- reshape2::melt(swiss)
ggplot(mtlong, aes(value)) + facet_wrap(~variable, scales = 'free_x') +
geom_histogram(binwidth = function(x) 2 * IQR(x) / (length(x)^(1/3)))
mtlong
ggplot(mtlong, aes(value)) + facet_wrap(participation~variable, scales = 'free_x') +
geom_histogram()
mtlong <- reshape2::melt(swiss[,1:3])
ggplot(mtlong, aes(value)) + facet_wrap(participation~variable, scales = 'free_x') +
geom_histogram()
ggplot(mtlong, aes(value)) + facet_grid(participation~variable, scales = 'free_x') +
geom_histogram()
swiss[1:10,]
mtlong <- reshape2::melt(swiss[,1:4])
ggplot(mtlong, aes(value)) + facet_grid(participation~variable, scales = 'free_x') +
geom_histogram()
swiss = SwissLabor
summary(swiss)
swiss$age = 10*swiss$age
mtlong <- reshape2::melt(swiss[,1:4])
ggplot(mtlong, aes(value)) + facet_grid(participation~variable, scales = 'free_x') +
geom_histogram()
mtlong <- reshape2::melt(swiss[,1:5])
ggplot(mtlong, aes(value)) + facet_grid(participation~variable, scales = 'free_x') +
geom_histogram()
mtlong <- reshape2::melt(swiss[,1:5])
ggplot(mtlong, aes(value)) + facet_grid(participation~variable, scales = 'free_x') +
geom_histogram()
mtlong <- reshape2::melt(swiss[,1:4])
ggplot(mtlong, aes(value)) + facet_grid(participation~variable, scales = 'free_x') +
geom_histogram()
setwd("/Users/ms486/Dropbox/Teaching/2019/AppliedEconometrics/DiscreteChoice")
pdf("char.pdf")
ggplot(mtlong, aes(value)) + facet_grid(participation~variable, scales = 'free_x') +
geom_histogram()
dev.off()
plt_inc = ggplot(swiss, aes(youngkids)) +  geom_histogram() + facet_grid(participation~.)
plt_inc
plt_inc = ggplot(swiss, aes(youngkids)) +  geom_freqpoly() + facet_grid(participation~.)
plt_inc
table(swiss$youngkids,swiss$participation)
table(swiss$oldkids,swiss$participation)
table(swiss$oldkids,swiss$participation)
prop.table(table(swiss$youngkids,swiss$participation),2)
prop.table(table(swiss$oldkids,swiss$participation),2)
prop.table(table(swiss$youngkids,swiss$participation),2)
prop.table(table(swiss$oldkids,swiss$participation),2)
tab = rbind(prop.table(table(swiss$youngkids,swiss$participation),2),
prop.table(table(swiss$oldkids,swiss$participation),2))
tab = rbind(prop.table(table(swiss$youngkids,swiss$participation),2),
prop.table(table(swiss$oldkids,swiss$participation),2))
tab
tab = rbind(prop.table(table(swiss$youngkids,swiss$participation),2),
prop.table(table(swiss$oldkids,swiss$participation),2))
tab
first =  c("\\multirow{4}{*}{Number of young kids}",
"  "  ,
"  "  ,
"  "  ,
"\\multirow{7}{*}{Number of old kids}",
"  "  ,
"  "  ,
"  "  ,
"  "  ,
"  "  ,
"  "  )
df = cbind(first,tab)
tab = rbind(prop.table(table(swiss$youngkids,swiss$participation),2),
prop.table(table(swiss$oldkids,swiss$participation),2))
tab = round(tab,2)
first =  c("\\multirow{4}{*}{Number of young kids}",
"  "  ,
"  "  ,
"  "  ,
"\\multirow{7}{*}{Number of old kids}",
"  "  ,
"  "  ,
"  "  ,
"  "  ,
"  "  ,
"  "  )
df = cbind(first,tab)
df
addtorow <- list()
addtorow$pos <- list()
addtorow$pos[[1]] <- -1
addtorow$pos[[2]] <- nrow(df1)
addtorow$command <- c(paste0('\\toprule \n',
' &  \\multicolumn{2}{c}{Participation} \\\\ \n'),
' &  No  & Yes \\\\ \n'),
'\\bottomrule \n')
print(xtable(df1, align="llll", digits = 3), include.colnames=FALSE,include.rownames=FALSE,hline.after = NULL,
add.to.row = addtorow, sanitize.text.function = function(x) {x})
print(xtable(df, align="llll", digits = 3), include.colnames=FALSE,include.rownames=FALSE,hline.after = NULL,
add.to.row = addtorow, sanitize.text.function = function(x) {x})
library(AER)
library(ggplot2)
library(xtable)
data("SwissLabor")
swiss = SwissLabor
summary(swiss)
swiss$age = 10*swiss$age
mtlong <- reshape2::melt(swiss[,1:4])
setwd("/Users/ms486/Dropbox/Teaching/2019/AppliedEconometrics/DiscreteChoice")
pdf("char.pdf")
ggplot(mtlong, aes(value)) + facet_grid(participation~variable, scales = 'free_x') +
geom_histogram()
dev.off()
tab = rbind(prop.table(table(swiss$youngkids,swiss$participation),2),
prop.table(table(swiss$oldkids,swiss$participation),2))
tab = round(tab,2)
first =  c("\\multirow{4}{*}{Number of young kids}",
"  "  ,
"  "  ,
"  "  ,
"\\multirow{7}{*}{Number of old kids}",
"  "  ,
"  "  ,
"  "  ,
"  "  ,
"  "  ,
"  "  )
df = cbind(first,tab)
df
addtorow <- list()
addtorow$pos <- list()
addtorow$pos[[1]] <- -1
addtorow$pos[[2]] <- nrow(df)
addtorow$command <- c(paste0('\\toprule \n',
' &  \\multicolumn{2}{c}{Participation} \\\\ \n'),
' &  No  & Yes \\\\ \n'),
'\\bottomrule \n')
print(xtable(df, align="llll", digits = 3), include.colnames=FALSE,include.rownames=FALSE,hline.after = NULL,
add.to.row = addtorow, sanitize.text.function = function(x) {x})
addtorow$command <- c(paste0('\\toprule \n',
' &  \\multicolumn{2}{c}{Participation} \\\\ \n',
' &  No  & Yes \\\\ \n'),
'\\bottomrule \n')
print(xtable(df, align="llll", digits = 3), include.colnames=FALSE,include.rownames=FALSE,hline.after = NULL,
add.to.row = addtorow, sanitize.text.function = function(x) {x})
tab = rbind(prop.table(table(swiss$youngkids,swiss$participation),2),
prop.table(table(swiss$oldkids,swiss$participation),2))
tab = round(tab,4)
first =  c("\\multirow{4}{*}{Number of young kids}",
"  "  ,
"  "  ,
"  "  ,
"\\multirow{7}{*}{Number of old kids}",
"  "  ,
"  "  ,
"  "  ,
"  "  ,
"  "  ,
"  "  )
df = cbind(first,tab)
df
addtorow <- list()
addtorow$pos <- list()
addtorow$pos[[1]] <- -1
addtorow$pos[[2]] <- nrow(df)
addtorow$command <- c(paste0('\\toprule \n',
' &  \\multicolumn{2}{c}{Participation} \\\\ \n',
' &  No  & Yes \\\\ \n'),
'\\bottomrule \n')
print(xtable(df, align="llll", digits = 3), include.colnames=FALSE,include.rownames=FALSE,hline.after = NULL,
add.to.row = addtorow, sanitize.text.function = function(x) {x})
df = cbind(first,c(0:3,0:6),tab)
df
addtorow <- list()
addtorow$pos <- list()
addtorow$pos[[1]] <- -1
addtorow$pos[[2]] <- nrow(df)
addtorow$command <- c(paste0('\\toprule \n',
' &  &  \\multicolumn{2}{c}{Participation} \\\\ \n',
' &  & No  & Yes \\\\ \n'),
'\\bottomrule \n')
print(xtable(df, align="lllll", digits = 3), include.colnames=FALSE,include.rownames=FALSE,hline.after = NULL,
add.to.row = addtorow, sanitize.text.function = function(x) {x})
print(xtable(df, align="lllll", digits = 3), include.colnames=FALSE,include.rownames=FALSE,hline.after = NULL,
add.to.row = addtorow, sanitize.text.function = function(x) {x},file="tab3l.tex")
swiss_probit <- glm(participation ~ . + I(age^2),
+ data = SwissLabor, family = binomial(link = "probit"))
swiss_probit <- glm(participation ~ . + I(age^2),
+ data = swiss, family = binomial(link = "probit"))
summary(swiss_probit)
probit1 <- glm(participation ~ . + I(age^2),
+ data = swiss, family = binomial(link = "probit"))
probit1 <- glm(participation ~ . + I(age^2), data = swiss, family = binomial(link = "probit"))
summary(probit1)
probit1 = glm(participation ~ income, data = swiss, family = binomial(link = "probit"))
probit2 = glm(participation ~ income + I(income^2), data = swiss, family = binomial(link = "probit"))
summary(probit2)
sink("probit_inc.tex")
texreg(list(probit1, probit2), dcolumn = FALSE, booktabs = TRUE,use.packages = FALSE, caption = "Probit Models",float.pos = "hb!")
sink()
library(texreg)
sink("probit_inc.tex")
texreg(list(probit1, probit2), dcolumn = FALSE, booktabs = TRUE,use.packages = FALSE, caption = "Probit Models",float.pos = "hb!")
sink()
probit1 = glm(participation ~ income, data = swiss, family = binomial(link = "probit"))
probit2 = glm(participation ~ income + I(income^2), data = swiss, family = binomial(link = "probit"))
probit2 = glm(participation ~ income + I(income^3), data = swiss, family = binomial(link = "probit"))
sink("probit_inc.tex")
texreg(list(probit1, probit2,probit3), dcolumn = FALSE, booktabs = TRUE,use.packages = FALSE, caption = "Probit Models",float.pos = "hb!")
sink()
probit1 = glm(participation ~ income, data = swiss, family = binomial(link = "probit"))
probit2 = glm(participation ~ income + I(income^2), data = swiss, family = binomial(link = "probit"))
probit3 = glm(participation ~ income + I(income^3), data = swiss, family = binomial(link = "probit"))
sink("probit_inc.tex")
texreg(list(probit1, probit2,probit3), dcolumn = FALSE, booktabs = TRUE,use.packages = FALSE, caption = "Probit Models",float.pos = "hb!")
sink()
texreg(list(probit1, probit2,probit3), dcolumn = FALSE, booktabs = TRUE,use.packages = FALSE, caption = "Probit Models",float.pos = "hb!")
probit1 = glm(participation ~ income, data = swiss, family = binomial(link = "probit"))
probit2 = glm(participation ~ income + I(income^2), data = swiss, family = binomial(link = "probit"))
probit3 = glm(participation ~ income + I(income^2) + I(income^3), data = swiss, family = binomial(link = "probit"))
sink("probit_inc.tex")
texreg(list(probit1, probit2,probit3), dcolumn = FALSE, booktabs = TRUE,use.packages = FALSE, caption = "Probit Models",float.pos = "hb!")
sink()
probit1 = glm(participation ~ age, data = swiss, family = binomial(link = "probit"))
probit2 = glm(participation ~ age + I(age^2), data = swiss, family = binomial(link = "probit"))
probit3 = glm(participation ~ age + I(age^2) + I(age^3), data = swiss, family = binomial(link = "probit"))
sink("probit_age.tex")
texreg(list(probit1, probit2,probit3), dcolumn = FALSE, booktabs = TRUE,use.packages = FALSE, caption = "Probit Models",float.pos = "hb!")
sink()
names(swiss)
probit1 = glm(participation ~ income + age + education + youngkids + oldkids, data = swiss, family = binomial(link = "probit"))
probit2 = glm(participation ~ income + age + education + youngkids + oldkids + I(age^2), data = swiss, family = binomial(link = "probit"))
probit3 = glm(participation ~ income + age + education + youngkids + oldkids + I(age^2) + I(income^2), data = swiss, family = binomial(link = "probit"))
sink("probit_spec.tex")
texreg(list(probit1, probit2,probit3), dcolumn = FALSE, booktabs = TRUE,use.packages = FALSE, caption = "Probit Models",float.pos = "hb!")
sink()
fav = mean(dnorm(predict(probit3, type = "link")))
marg =  fav * coef(probit3)
marg
xtable(marg)
xtable(marg.t())
xtable(t(marg))
fav = mean(dnorm(predict(probit3, type = "link")))
marg =  fav * coef(probit3)
xtable(marg)
fav = mean(dnorm(predict(probit3, type = "link")))
marg =  as.matrix(fav * coef(probit3))
xtable(marg)
table(true = swiss$participation,pred = round(fitted(swiss)))
table(true = swiss$participation,pred = round(fitted(probit3)))
table(true = swiss$participation,predicted = round(fitted(probit3)))
table(data = swiss$participation,predicted = round(fitted(probit3)))
table(data = as.numeric(swiss$participation),predicted = round(fitted(probit3)))
table(data = as.numeric(swiss$participation),model= round(fitted(probit3)))
xtable(ff)
ff = table(data = as.numeric(swiss$participation),model= round(fitted(probit3)))
xtable(ff)
ff = table(data = as.numeric(swiss$participation),model= round(fitted(probit3)))
print(xtable(ff, align="lll", digits = 3), include.colnames=TRUE,include.rownames=TRUE,hline.after = NULL,
add.to.row = addtorow, sanitize.text.function = function(x) {x})
ff = table(data = as.numeric(swiss$participation),model= round(fitted(probit3)))
print(xtable(ff, align="lll", digits = 3), include.colnames=TRUE,include.rownames=TRUE,hline.after = NULL,
sanitize.text.function = function(x) {x})
ff = table(data = as.numeric(swiss$participation),model= round(fitted(probit3)))
ff
ff = table(data = as.numeric(swiss$participation),model= round(fitted(probit3)))
ff
ff = table(data = as.numeric(swiss$participation),model= round(fitted(probit3)))
ff
as.numeric(swiss$participation)
table(data = as.numeric(swiss$participation),model= round(fitted(probit3)))
table(data = as.numeric(swiss$participation)-1,model= round(fitted(probit3)))
stargazer::stargazer(table(data = as.numeric(swiss$participation)-1,model= round(fitted(probit3))))
table(data = as.numeric(swiss$participation)-1,model= round(fitted(probit3)))
xtable(table(data = as.numeric(swiss$participation)-1,model= round(fitted(probit3))))
library("ROCR")
install.packages("ROCR")
library("ROCR")
pred <- prediction(fitted(probit3)
)
pred <- prediction(fitted(probit3))
swiss$score<-predict.glm(probit3, type="response" )
pred = prediction(swiss$score,df$participation)
pred = prediction(swiss$score,swiss$participation)
perf = performance(pred,"tpr", "fpr")
plot(perf)
auc =  performance(pred,"auc")
auc
plot(auc)
plot(performance(pred, "acc"))
plot(performance(pred, "tpr", "fpr"))
performance(pred, "acc")
str(performance(pred, "acc"))
str(performance(pred, "tpr", "fpr"))
par(mfrow=c(2,1))
plot(performance(pred, "acc"))
plot(performance(pred, "tpr", "fpr"))
par(mfrow=c(1,2))
plot(performance(pred, "acc"))
plot(performance(pred, "tpr", "fpr"))
dev.off()
pdf("roc.pdf")
par(mfrow=c(1,2))
plot(performance(pred, "acc"))
plot(performance(pred, "tpr", "fpr"))
dev.off()
names(swiss)
table(swiss$foreign)
probit31 = glm(participation ~ income + age + education + youngkids + oldkids + I(age^2) + I(income^2), data = subset(swiss,foreign=="no"), family = binomial(link = "probit"))
probit32 = glm(participation ~ income + age + education + youngkids + oldkids + I(age^2) + I(income^2), data = subset(swiss,foreign=="yes"), family = binomial(link = "probit"))
sink("probit_foreign.tex")
texreg(list(probit31, probit32), dcolumn = FALSE, booktabs = TRUE,use.packages = FALSE, caption = "Probit Models",float.pos = "hb!")
sink()
data("MurderRates")
murder = MurderRates
murder
murder_logit <- glm(I(executions > 0) ~ time + income + noncauc + lfp + southern, data = MurderRates, family = binomial)
summary(murder_logit)
table(I(MurderRates$executions > 0), MurderRates$southern)
