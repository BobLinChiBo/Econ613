panel <- panel %>% dplyr::mutate("my_work_exp_y_{year}" := rowSums(across(starts_with("CV_WKSWK_JOB") & ends_with(toString(year)), function(x) x/52), na.rm = TRUE))
}
View(panel)
for (year in c(1997:2011, 2013, 2015, 2017, 2019)) {
panel <- panel %>%
mutate("my_work_exp_y_{year}" := rowSums(across(starts_with("CV_WKSWK_JOB") & ends_with(toString(year)), function(x) x/52), na.rm = TRUE),
"my_work_exp_y_{year}" := ifelse(.x == 0, NA_real_, .x))
}
for (year in c(1997:2011, 2013, 2015, 2017, 2019)) {
panel <- panel %>%
mutate("my_work_exp_y_{year}" := rowSums(across(starts_with("CV_WKSWK_JOB") & ends_with(toString(year)), function(x) x/52), na.rm = TRUE),
"my_work_exp_y_{year}" := ifelse(. == 0, NA_real_, .))
}
for (year in c(1997:2011, 2013, 2015, 2017, 2019)) {
panel <- panel %>%
mutate("my_work_exp_y_{year}" := rowSums(across(starts_with("CV_WKSWK_JOB") & ends_with(toString(year)), function(x) x/52), na.rm = TRUE),
"my_work_exp_y_{year}" := ifelse("my_work_exp_y_{year}" == 0, NA_real_, "my_work_exp_y_{year}"))
}
for (year in c(1997:2011, 2013, 2015, 2017, 2019)) {
panel <- panel %>%
mutate("my_work_exp_y_{year}" := rowSums(across(starts_with("CV_WKSWK_JOB") & ends_with(toString(year)), function(x) x/52), na.rm = TRUE),
"my_work_exp_y_{year}" := ifelse(my_work_exp_y_{year} == 0, NA_real_, my_work_exp_y_{year}))
}
panel <- raw_panel %>%
rename(birth_year = KEY_BDATE_Y_1997,
gender = KEY_SEX_1997,
race = KEY_RACE_ETHNICITY_1997) %>%
rename_with(~ str_replace(., "YINC-1700", "my_income_y")) %>%
rename_with(~ str_replace(., "CV_MARSTAT_COLLAPSED", "marital_status_y")) %>%
select(!contains("EVER_EDT")) %>%
rename_with(~ str_replace(., "CV_HIGHEST_DEGREE_.+?_", "self_edu_degree_y_")) %>%
mutate(age = 2019 - birth_year,
gender = factor(gender, labels = c("male", "female")),
race = factor(race, labels = c("black", "hispanic", "mixed", "non")),
across(starts_with("marital_status"), function(x) x == 1, .names = "my_married_{.col}"),
across(starts_with("self_edu_degree"), function(x) case_when(x == 1 ~ 0,
x == 2 ~ 12,
x == 3 ~ 12,
x == 4 ~ 14,
x == 5 ~ 16,
x == 6 ~ 18,
x == 7 ~ 23,
x == 8 ~ 19,
x <= 0 ~ NA_real_), .names = "my_edu_{.col}"))
for (year in c(1997:2011, 2013, 2015, 2017, 2019)) {
panel <- panel %>%
mutate("my_work_exp_y_{year}" := rowSums(across(starts_with("CV_WKSWK_JOB") & ends_with(toString(year)), function(x) x/52), na.rm = TRUE))
}
panel %>% mutate(across(starts_with("my_work_exp_y_"), function(x) case_when(x == 0 ~ NA_real_,
x != 0 ~ x)))
panel <- panel %>% mutate(across(starts_with("my_work_exp_y_"), function(x) case_when(x == 0 ~ NA_real_,
x != 0 ~ x)))
View(panel)
### Q2
panel_long <- panel %>%
pivot_longer(starts_with("my_"), names_to = c(".value", "year"), names_sep = "_y_") %>%
rename(id = PUBID_1997,
education  = my_edu_self_edu_degree,
income = my_income,
married = my_married_marital_status,
work_exp = my_work_exp) %>%
select(id, year, gender, income, education, married) %>%
drop_na()
View(panel_long)
### Q2
panel_long <- panel %>%
pivot_longer(starts_with("my_"), names_to = c(".value", "year"), names_sep = "_y_") %>%
rename(id = PUBID_1997,
education  = my_edu_self_edu_degree,
income = my_income,
married = my_married_marital_status,
work_exp = my_work_exp) %>%
select(id, year, gender, income, education, married, work_exp) %>%
drop_na()
View(panel_long)
panel_plm <- pdata.frame(panel_long, index = c("id", "year"))
## between
between_data <- panel_long %>%
group_by(id) %>% summarise(gender = mean(as.numeric(gender)-1),
mean_married = mean(married),
mean_income = mean(income),
mean_education = mean(education),
mean_work_exp = mean(work_exp))
between_lm <- lm(mean_income ~ gender + mean_education + mean_married + mean_work_exp, data = between_data)
between_plm <- plm(income ~  gender + education + married + work_exp, data = panel_plm, model = "between")
compare_estimates <- cbind(summary(between_plm)$coefficients[,1:2], summary(between_lm)$coefficients[,1:2])
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
## within
within_data <- panel_long %>%
left_join(mean_data, by = "id") %>%
group_by(id) %>%
mutate(count = n()) %>%
filter(count > 1) %>%
mutate(mean_married = mean(married),
mean_income = mean(income),
mean_education = mean(education),
mean_work_exp = mean(work_exp)) %>%
mutate(dif_income = income - mean_income,
dif_education = education - mean_education,
dif_married = married - mean_married,
dif_work_exp = work_exp - mean_work_exp) %>%
distinct()
within_lm <- lm(dif_income ~ -1 + dif_education + dif_married + dif_work_exp, data = within_data)
summary(within_lm)
# However, the standard errors need to be adjust since we estimate the means of each individual. Reference:https://www.stata.com/manuals/xtxtreg.pdf (Methods and formulas)
n_individual <- within_data %>% select(id) %>%  n_distinct()
adjust_std <- sqrt(summary(within_lm)$coefficients[,2]^2 * (summary(within_lm)$fstatistic[3])/ (summary(within_lm)$fstatistic[3] - n_individual))
within_plm <- plm(income ~  education + married + work_exp, data = panel_plm, model = "within", effect = "individual")
compare_estimates <- cbind(summary(within_plm)$coefficients[, 1:2], summary(within_lm)$coefficients[, 1], adjust_std)
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
?plm
a <- panel_long %>% mutate(lag_income = lag(income))
View(a)
?lag
a <- panel_long %>%
group_by(id) %>%
mutate(lag_income = lag(income, order_by = "year"))
View(a)
scrambled <- slice_sample(tibble(year = 2000:2005, value = (0:5) ^ 2), prop = 1)
wrong <- mutate(scrambled, previous_year_value = lag(value))
arrange(wrong, year)
right <- mutate(scrambled, previous_year_value = lag(value, order_by = year))
arrange(right, year)
scrambled <- slice_sample(tibble(year = 2000:2005, value = (0:5) ^ 2), prop = 1)
wrong <- mutate(scrambled, previous_year_value = lag(value))
arrange(wrong, year)
right <- mutate(scrambled, previous_year_value = lag(value, order_by = year))
arrange(right, year)
scrambled
a <- panel_long %>%
group_by(id) %>%
dplyr::mutate(lag_income = lag(income, order_by = year))
View(a)
library(tidyverse)
library(ggplot2)
library(scales)
library(sampleSelection)
library(AER)
library(plm)
library(numDeriv)
##### Exercise 4
raw_panel <-
read_csv("./Data/dat_A4_panel.csv",
col_types = cols(.default = "d")) %>%
select(!starts_with("..."))
panel <- raw_panel %>%
rename(birth_year = KEY_BDATE_Y_1997,
gender = KEY_SEX_1997,
race = KEY_RACE_ETHNICITY_1997) %>%
rename_with(~ str_replace(., "YINC-1700", "my_income_y")) %>%
rename_with(~ str_replace(., "CV_MARSTAT_COLLAPSED", "marital_status_y")) %>%
select(!contains("EVER_EDT")) %>%
rename_with(~ str_replace(., "CV_HIGHEST_DEGREE_.+?_", "self_edu_degree_y_")) %>%
mutate(age = 2019 - birth_year,
gender = factor(gender, labels = c("male", "female")),
race = factor(race, labels = c("black", "hispanic", "mixed", "non")),
across(starts_with("marital_status"), function(x) x == 1, .names = "my_married_{.col}"),
across(starts_with("self_edu_degree"), function(x) case_when(x == 1 ~ 0,
x == 2 ~ 12,
x == 3 ~ 12,
x == 4 ~ 14,
x == 5 ~ 16,
x == 6 ~ 18,
x == 7 ~ 23,
x == 8 ~ 19,
x <= 0 ~ NA_real_), .names = "my_edu_{.col}"))
for (year in c(1997:2011, 2013, 2015, 2017, 2019)) {
panel <- panel %>%
mutate("my_work_exp_y_{year}" := rowSums(across(starts_with("CV_WKSWK_JOB") & ends_with(toString(year)), function(x) x/52), na.rm = TRUE))
}
panel <- panel %>% mutate(across(starts_with("my_work_exp_y_"), function(x) case_when(x == 0 ~ NA_real_,
x != 0 ~ x)))
### Q2
panel_long <- panel %>%
pivot_longer(starts_with("my_"), names_to = c(".value", "year"), names_sep = "_y_") %>%
rename(id = PUBID_1997,
education  = my_edu_self_edu_degree,
income = my_income,
married = my_married_marital_status,
work_exp = my_work_exp) %>%
select(id, year, gender, income, education, married, work_exp) %>%
drop_na()
panel_plm <- pdata.frame(panel_long, index = c("id", "year"))
a <- panel_long %>%
group_by(id) %>%
dplyr::mutate(lag_income = lag(income, order_by = year))
View(a)
a <- panel_long %>%
group_by(id) %>%
dplyr::mutate(lag_income = dplyr::lag(income, order_by = year))
View(a)
a <- panel_long %>%
group_by(id) %>%
mutate(lag_income = dplyr::lag(income, order_by = year),
lag_education = dplyr::lag(education, order_by = year),
lag_married = dplyr::lag(married, order_by = year),
lag_work_exp = dplyr::lag(work_exp, order_by = year)) %>%
mutate(dif_income = income - lag_income,
dif_education = education - lag_education,
dif_married = married - lag_married,
dif_work_exp = work_exp - lag_work_exp)
View(a)
a <- panel_long %>%
group_by(id) %>%
mutate(lag_income = dplyr::lead(income, order_by = year),
lag_education = dplyr::lead(education, order_by = year),
lag_married = dplyr::lead(married, order_by = year),
lag_work_exp = dplyr::lead(work_exp, order_by = year)) %>%
mutate(dif_income = income - lead_income,
dif_education = education - lead_education,
dif_married = married - lead_married,
dif_work_exp = work_exp - lead_work_exp)
View(a)
a <- panel_long %>%
group_by(id) %>%
mutate(lead_income = dplyr::lead(income, order_by = year),
lead_education = dplyr::lead(education, order_by = year),
lead_married = dplyr::lead(married, order_by = year),
lead_work_exp = dplyr::lead(work_exp, order_by = year)) %>%
mutate(dif_income = income - lead_income,
dif_education = education - lead_education,
dif_married = married - lead_married,
dif_work_exp = work_exp - lead_work_exp)
View(a)
fd_data <- panel_long %>%
group_by(id) %>%
mutate(lead_income = dplyr::lead(income, order_by = year),
lead_education = dplyr::lead(education, order_by = year),
lead_married = dplyr::lead(married, order_by = year),
lead_work_exp = dplyr::lead(work_exp, order_by = year)) %>%
mutate(dif_income = income - lead_income,
dif_education = education - lead_education,
dif_married = married - lead_married,
dif_work_exp = work_exp - lead_work_exp)
fd_lm <- lm(dif_income ~ -1 + dif_education + dif_married + dif_work_exp, data = fd_data)
summary(fd_lm)
summary(fd_plm)
## first difference
fd_plm <- plm(income ~  education + married , data = panel_plm, model = "fd", effect = "individual")
summary(fd_plm)
## first difference
fd_plm <- plm(income ~  education + married + dif_work_exp, data = panel_plm, model = "fd", effect = "individual")
summary(fd_plm)
## first difference
fd_plm <- plm(income ~  education + married + work_exp, data = panel_plm, model = "fd", effect = "individual")
summary(fd_plm)
summary(fd_lm)
fd_lm <- lm(dif_income ~  dif_education + dif_married + dif_work_exp, data = fd_data)
summary(fd_lm)
summary(fd_plm)
compare_estimates <- cbind(summary(fd_plm)$coefficients[, 1:2], summary(fd_lm)$coefficients[, 1:2])
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
### Q3
compare_estimates <- cbind(summary(between_lm)$coefficients[, 1], summary(within_lm)$coefficients[, 1], summary(fd_lm)$coefficients[, 1])
## between
between_data <- panel_long %>%
group_by(id) %>% summarise(gender = mean(as.numeric(gender)-1),
mean_married = mean(married),
mean_income = mean(income),
mean_education = mean(education),
mean_work_exp = mean(work_exp))
between_lm <- lm(mean_income ~ gender + mean_education + mean_married + mean_work_exp, data = between_data)
between_plm <- plm(income ~  gender + education + married + work_exp, data = panel_plm, model = "between")
compare_estimates <- cbind(summary(between_plm)$coefficients[,1:2], summary(between_lm)$coefficients[,1:2])
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
### Q3
compare_estimates <- cbind(summary(between_lm)$coefficients[, 1], summary(within_lm)$coefficients[, 1], summary(fd_lm)$coefficients[, 1])
## within
within_data <- panel_long %>%
left_join(mean_data, by = "id") %>%
group_by(id) %>%
mutate(count = n()) %>%
filter(count > 1) %>%
mutate(mean_married = mean(married),
mean_income = mean(income),
mean_education = mean(education),
mean_work_exp = mean(work_exp)) %>%
mutate(dif_income = income - mean_income,
dif_education = education - mean_education,
dif_married = married - mean_married,
dif_work_exp = work_exp - mean_work_exp) %>%
distinct()
within_lm <- lm(dif_income ~ -1 + dif_education + dif_married + dif_work_exp, data = within_data)
summary(within_lm)
## within
within_data <- panel_long %>%
group_by(id) %>%
mutate(count = n()) %>%
filter(count > 1) %>%
mutate(mean_married = mean(married),
mean_income = mean(income),
mean_education = mean(education),
mean_work_exp = mean(work_exp)) %>%
mutate(dif_income = income - mean_income,
dif_education = education - mean_education,
dif_married = married - mean_married,
dif_work_exp = work_exp - mean_work_exp) %>%
distinct()
within_lm <- lm(dif_income ~ -1 + dif_education + dif_married + dif_work_exp, data = within_data)
summary(within_lm)
# However, the standard errors need to be adjust since we estimate the means of each individual. Reference:https://www.stata.com/manuals/xtxtreg.pdf (Methods and formulas)
n_individual <- within_data %>% select(id) %>%  n_distinct()
adjust_std <- sqrt(summary(within_lm)$coefficients[,2]^2 * (summary(within_lm)$fstatistic[3])/ (summary(within_lm)$fstatistic[3] - n_individual))
within_plm <- plm(income ~  education + married + work_exp, data = panel_plm, model = "within", effect = "individual")
compare_estimates <- cbind(summary(within_plm)$coefficients[, 1:2], summary(within_lm)$coefficients[, 1], adjust_std)
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
### Q3
compare_estimates <- cbind(summary(between_lm)$coefficients[, 1], summary(within_lm)$coefficients[, 1], summary(fd_lm)$coefficients[, 1])
summary(between_lm)$coefficients[, 1]
### Q3
compare_estimates <- rbind(summary(between_lm)$coefficients[, 1], summary(within_lm)$coefficients[, 1], summary(fd_lm)$coefficients[, 1])
### Q3
compare_estimates <- cbind(summary(between_lm)$coefficients[, 1], summary(within_lm)$coefficients[, 1], summary(fd_lm)$coefficients[, 1])
compare_estimates
compare_estimates
compare_estimates <- cbind(summary(between_plm)$coefficients[,1:2], summary(between_lm)$coefficients[,1:2])
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
compare_estimates <- cbind(summary(within_plm)$coefficients[, 1:2], summary(within_lm)$coefficients[, 1], adjust_std)
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
compare_estimates <- cbind(summary(fd_plm)$coefficients[, 1:2], summary(fd_lm)$coefficients[, 1:2])
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
### Q3
compare_estimates <- cbind(summary(between_lm)$coefficients[, 1], summary(within_lm)$coefficients[, 1], summary(fd_lm)$coefficients[, 1])
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
### Q3
compare_estimates <- cbind(summary(between_lm)$coefficients[, 1], c(NA, summary(within_lm)$coefficients[, 1]), summary(fd_lm)$coefficients[, 1])
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
summary(within_lm)$coefficients[, 1]
### Q3
compare_estimates <- cbind(summary(between_lm)$coefficients[, 1], c(NA, NA, summary(within_lm)$coefficients[, 1]), summary(fd_lm)$coefficients[, 1])
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
### Q3
compare_estimates <- cbind(summary(between_lm)$coefficients[, 1], c(NA, NA, summary(within_lm)$coefficients[, 1]), summary(fd_lm)$coefficients[, 1])
compare_estimates
summary(within_lm)$coefficients[, 1]
summary(fd_lm)$coefficients[, 1]
summary(between_lm)$coefficients[, 1]
### Q2
panel_long <- panel %>%
pivot_longer(starts_with("my_"), names_to = c(".value", "year"), names_sep = "_y_") %>%
rename(id = PUBID_1997,
education  = my_edu_self_edu_degree,
income = my_income,
married = my_married_marital_status,
work_exp = my_work_exp) %>%
select(id, year, gender, income, education, married, work_exp) %>%
drop_na()
panel_plm <- pdata.frame(panel_long, index = c("id", "year"))
## between
between_data <- panel_long %>%
group_by(id) %>% summarise(gender = mean(as.numeric(gender)-1),
mean_married = mean(married),
mean_income = mean(income),
mean_education = mean(education),
mean_work_exp = mean(work_exp))
### Q2
panel_long <- panel %>%
pivot_longer(starts_with("my_"), names_to = c(".value", "year"), names_sep = "_y_") %>%
rename(id = PUBID_1997,
education  = my_edu_self_edu_degree,
income = my_income,
married = my_married_marital_status,
work_exp = my_work_exp) %>%
select(id, year, gender, income, education, married, work_exp) %>%
drop_na()
### Q2
panel_long <- panel %>%
pivot_longer(starts_with("my_"), names_to = c(".value", "year"), names_sep = "_y_") %>%
rename(id = PUBID_1997,
education  = my_edu_self_edu_degree,
income = my_income,
married = my_married_marital_status,
work_exp = my_work_exp) %>%
select(id, year, income, education, married, work_exp) %>%
drop_na()
panel_plm <- pdata.frame(panel_long, index = c("id", "year"))
## between
between_data <- panel_long %>%
group_by(id) %>% summarise(mean_married = mean(married),
mean_income = mean(income),
mean_education = mean(education),
mean_work_exp = mean(work_exp))
between_lm <- lm(mean_income ~ mean_education + mean_married + mean_work_exp, data = between_data)
between_plm <- plm(income ~ education + married + work_exp, data = panel_plm, model = "between")
compare_estimates <- cbind(summary(between_plm)$coefficients[,1:2], summary(between_lm)$coefficients[,1:2])
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
## within
within_data <- panel_long %>%
group_by(id) %>%
mutate(count = n()) %>%
filter(count > 1) %>%
mutate(mean_married = mean(married),
mean_income = mean(income),
mean_education = mean(education),
mean_work_exp = mean(work_exp)) %>%
mutate(dif_income = income - mean_income,
dif_education = education - mean_education,
dif_married = married - mean_married,
dif_work_exp = work_exp - mean_work_exp) %>%
distinct()
within_lm <- lm(dif_income ~ -1 + dif_education + dif_married + dif_work_exp, data = within_data)
summary(within_lm)
# However, the standard errors need to be adjust since we estimate the means of each individual. Reference:https://www.stata.com/manuals/xtxtreg.pdf (Methods and formulas)
n_individual <- within_data %>% select(id) %>%  n_distinct()
adjust_std <- sqrt(summary(within_lm)$coefficients[,2]^2 * (summary(within_lm)$fstatistic[3])/ (summary(within_lm)$fstatistic[3] - n_individual))
within_plm <- plm(income ~  education + married + work_exp, data = panel_plm, model = "within", effect = "individual")
compare_estimates <- cbind(summary(within_plm)$coefficients[, 1:2], summary(within_lm)$coefficients[, 1], adjust_std)
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
## first difference
fd_data <- panel_long %>%
group_by(id) %>%
mutate(lead_income = dplyr::lead(income, order_by = year),
lead_education = dplyr::lead(education, order_by = year),
lead_married = dplyr::lead(married, order_by = year),
lead_work_exp = dplyr::lead(work_exp, order_by = year)) %>%
mutate(dif_income = income - lead_income,
dif_education = education - lead_education,
dif_married = married - lead_married,
dif_work_exp = work_exp - lead_work_exp)
fd_lm <- lm(dif_income ~  dif_education + dif_married + dif_work_exp, data = fd_data)
fd_plm <- plm(income ~  education + married + work_exp, data = panel_plm, model = "fd", effect = "individual")
compare_estimates <- cbind(summary(fd_plm)$coefficients[, 1:2], summary(fd_lm)$coefficients[, 1:2])
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
View(fd_plm)
View(fd_lm)
## first difference
fd_data <- panel_long %>%
group_by(id) %>%
mutate(lead_income = dplyr::lead(income, order_by = year),
lead_education = dplyr::lead(education, order_by = year),
lead_married = dplyr::lead(married, order_by = year),
lead_work_exp = dplyr::lead(work_exp, order_by = year)) %>%
mutate(dif_income = lead_income - income,
dif_education = lead_education - education,
dif_married = lead_married - married,
dif_work_exp = lead_work_exp - work_exp)
fd_lm <- lm(dif_income ~  dif_education + dif_married + dif_work_exp, data = fd_data)
fd_plm <- plm(income ~  education + married + work_exp, data = panel_plm, model = "fd", effect = "individual")
compare_estimates <- cbind(summary(fd_plm)$coefficients[, 1:2], summary(fd_lm)$coefficients[, 1:2])
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
### Q3
compare_estimates <- cbind(summary(between_lm)$coefficients[, 1], c(NA, summary(within_lm)$coefficients[, 1]), summary(fd_lm)$coefficients[, 1])
compare_estimates
colnames(compare_estimates) = c("between : own", "within :own", "fd : own")
compare_estimates
compare_estimates <- cbind(summary(fd_plm)$coefficients[, 1:2], summary(fd_lm)$coefficients[, 1:2])
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
### Q3
compare_estimates <- cbind(summary(between_lm)$coefficients[, 1], c(NA, summary(within_lm)$coefficients[, 1]), summary(fd_lm)$coefficients[, 1])
colnames(compare_estimates) = c("between : own", "within :own", "fd : own")
compare_estimates
compare_estimates <- cbind(summary(fd_plm)$coefficients[, 1:2], summary(fd_lm)$coefficients[, 1:2])
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
### Q3
compare_estimates <- cbind(summary(between_lm)$coefficients[, 1], c(NA, summary(within_lm)$coefficients[, 1]), summary(fd_lm)$coefficients[, 1])
colnames(compare_estimates) = c("between : own", "within :own", "fd : own")
compare_estimates
compare_estimates <- cbind(summary(between_plm)$coefficients[,1:2], summary(between_lm)$coefficients[,1:2])
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
### Q3
compare_estimates <- cbind(summary(between_lm)$coefficients[, 1], c(NA, summary(within_lm)$coefficients[, 1]), summary(fd_lm)$coefficients[, 1])
colnames(compare_estimates) = c("between : own", "within :own", "fd : own")
compare_estimates
compare_estimates <- cbind(summary(within_plm)$coefficients[, 1:2], summary(within_lm)$coefficients[, 1], adjust_std)
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
### Q3
compare_estimates <- cbind(summary(between_lm)$coefficients[, 1], c(NA, summary(within_lm)$coefficients[, 1]), summary(fd_lm)$coefficients[, 1])
colnames(compare_estimates) = c("between : own", "within :own", "fd : own")
compare_estimates
### Q3
compare_estimates <- cbind(summary(between_lm)$coefficients[, 1], c(NA, summary(within_lm)$coefficients[, 1]), summary(fd_lm)$coefficients[, 1])
colnames(compare_estimates) = c("between : own", "within :own", "fd : own")
rownames(compare_estimates) = c("(Intercept)", "education", "married", "work_exp")
compare_estimates
fd_plm <- plm(income ~  education + married + work_exp, data = panel_plm, model = "fd", effect = "individual")
compare_estimates <- cbind(summary(fd_plm)$coefficients[, 1:2], summary(fd_lm)$coefficients[, 1:2])
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
fd_lm <- lm(dif_income ~ -1 + dif_education + dif_married + dif_work_exp, data = fd_data)
fd_plm <- plm(income ~-1 + education + married + work_exp, data = panel_plm, model = "fd", effect = "individual")
compare_estimates <- cbind(summary(fd_plm)$coefficients[, 1:2], summary(fd_lm)$coefficients[, 1:2])
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
### Q3
#
compare_estimates <- cbind(summary(between_lm)$coefficients[, 1], c(NA, summary(within_lm)$coefficients[, 1]), c(NA, summary(fd_lm)$coefficients[, 1]))
colnames(compare_estimates) = c("between : own", "within :own", "fd : own")
rownames(compare_estimates) = c("(Intercept)", "education", "married", "work_exp")
compare_estimates
fd_lm <- lm(dif_income ~   dif_education + dif_married + dif_work_exp, data = fd_data)
fd_plm <- plm(income ~  education + married + work_exp, data = panel_plm, model = "fd", effect = "individual")
compare_estimates <- cbind(summary(fd_plm)$coefficients[, 1:2], summary(fd_lm)$coefficients[, 1:2])
colnames(compare_estimates) = c("plm : est", "plm :se", "own : est", "own :se")
compare_estimates
