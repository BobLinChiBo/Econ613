best_guess <- summary(mlogit_result)$coefficients
View(mlogit_result)
mlogit_result <- mlogit(choice_rev ~ 0 | score, data = ind_recode_first_mlogit.sample)
best_guess <- summary(mlogit_result)$coefficients
ind_recode_first_d.sample <-
ind_recode_first.sample %>%
add_dummies("choice_rev", "score")
View(ind_recode_first_d.sample)
### 5
add_dummies <- function(data, factor, other_var){
formula <- paste("~ ", factor, " + ", factor, " * " , other_var)
formula <- as.formula(formula)
factor_dummies <- model.matrix(formula, data)
data_dummies <- cbind(factor_dummies[, -1], data) %>% select(other_var)
return(data_dummies)
}
ind_recode_first_d.sample <-
ind_recode_first.sample %>%
add_dummies("choice_rev", "score")
View(ind_recode_first_d.sample)
### 5
add_dummies <- function(data, factor, other_var){
formula <- paste("~ ", factor, " + ", factor, " * " , other_var)
formula <- as.formula(formula)
factor_dummies <- model.matrix(formula, data)
data_dummies <- cbind(factor_dummies[, -1], data) %>% select(-other_var)
return(data_dummies)
}
ind_recode_first_d.sample <-
ind_recode_first.sample %>%
add_dummies("choice_rev", "score")
View(ind_recode_first_d.sample)
View(ind_recode_first.sample)
### 5
add_dummies <- function(data, factor, other_var){
formula <- paste("~ ", factor, " + ", factor, " * " , other_var)
formula <- as.formula(formula)
factor_dummies <- model.matrix(formula, data)
data_with_dummies <- cbind(factor_dummies[, -1], data)
new_data <- data_with_dummies %>% select(-c(factor, other_var))
return(new_data)
}
ind_recode_first_d.sample <-
ind_recode_first.sample %>%
add_dummies("choice_rev", "score")
View(ind_recode_first_d.sample)
?select
### 5
add_dummies <- function(data, factor, other_var){
formula <- paste("~ ", factor, " + ", factor, " * " , other_var)
formula <- as.formula(formula)
factor_dummies <- model.matrix(formula, data)
data_with_dummies <- cbind(factor_dummies[, -1], data)
new_data <- data_with_dummies %>% select(!c(factor, other_var))
return(new_data)
}
ind_recode_first_d.sample <-
ind_recode_first.sample %>%
add_dummies("choice_rev", "score")
View(ind_recode_first_d.sample)
### 5
add_dummies <- function(data, factor, other_var){
formula <- paste("~ ", factor, " + ", factor, " * " , other_var)
formula <- as.formula(formula)
factor_dummies <- model.matrix(formula, data)
data_with_dummies <- cbind(factor_dummies[, -1], data)
print(head(data_with_dummies,5))
new_data <- data_with_dummies %>% select(!c(factor, other_var))
print(head(new_data,5))
return(new_data)
}
ind_recode_first_d.sample <-
ind_recode_first.sample %>%
add_dummies(factor = "choice_rev", other_var = "score")
### 5
add_dummies <- function(data, factor, other_var){
formula <- paste("~ ", factor, " + ", factor, " * " , other_var)
formula <- as.formula(formula)
factor_dummies <- model.matrix(formula, data)
data_with_dummies <- as_tibble(cbind(factor_dummies[, -1], data))
print(head(data_with_dummies,5))
new_data <- data_with_dummies %>% select(-c(factor, other_var))
print(head(new_data,5))
return(new_data)
}
ind_recode_first_d.sample <-
ind_recode_first.sample %>%
add_dummies(factor = "choice_rev", other_var = "score")
?as_tibble
ind_recode_first_d.sample[-"score"]
ind_recode_first_d.sample[!"score"]
ind_recode_first_d.sample[,-"score"]
ind_recode_first_d.sample[,!"score"]
### 5
add_dummies <- function(data, factor, other_var){
formula <- paste("~ ", factor, " + ", factor, " * " , other_var)
formula <- as.formula(formula)
factor_dummies <- model.matrix(formula, data)
print(head(factor_dummies,5))
data_with_dummies <- as_tibble(cbind(factor_dummies[, -1], data))
print(head(data_with_dummies,5))
new_data <- data_with_dummies %>% select(-c(factor, other_var))
print(head(new_data,5))
return(new_data)
}
ind_recode_first_d.sample <-
ind_recode_first.sample %>%
add_dummies(factor = "choice_rev", other_var = "score")
View(ind_recode_first.sample)
### 5
add_dummies <- function(data, factor, other_var){
formula <- paste("~ ", factor, " + ", factor, " * " , other_var)
formula <- as.formula(formula)
factor_dummies <- model.matrix(formula, data)
return(factor_dummies)
}
ind_recode_first_d.sample <-
ind_recode_first.sample %>%
add_dummies(factor = "choice_rev", other_var = "score")
View(ind_recode_first_d.sample)
### 5
add_dummies <- function(data, factor, other_var){
formula <- paste("~ ", factor, " + ", factor, " * " , other_var)
formula <- as.formula(formula)
factor_dummies <- model.matrix(formula, data)
new_data <- as_tibble(factor_dummies[, -1])
return(new_data)
}
ind_recode_first_d.sample <-
ind_recode_first.sample %>%
add_dummies(factor = "choice_rev", other_var = "score")
View(ind_recode_first_d.sample)
choices <-
ind_recode_first.sample %>%
select(choice_rev) %>%
distinct() %>%
arrange(choice_rev)
choices_no_head <-
choices %>% slice(-1)
c <- max_log_likelihood(data = ind_recode_first_d.sample,
choices = choices_no_head, times = 10,
beta_start_min = -1, beta_start_max = 1, best_guess = best_guess)
likelihood_logit_ind <- function(X_n, coefficients, choices){
print(X_n)
print(coefficients)
utility_n <- as.matrix(X_n) %*% as.matrix(coefficients)
sum_exp_utility_n <- 0
for (i in 1:length(choices)) {
X_n[1:length(choices)] = 0
X_n[i] = 1
sum_exp_utility_n = sum_exp_utility_n + exp(as.matrix(X_n) %*% as.matrix(coefficients))
}
prob_y_n <- exp(utility_n) / sum_exp_utility_n
prob_y_n[prob_y_n > 0.9999] = 0.9999
prob_y_n[prob_y_n < 0.0001] = 0.0001
return(prob_y_n)
}
c <- max_log_likelihood(data = ind_recode_first_d.sample,
choices = choices_no_head, times = 10,
beta_start_min = -1, beta_start_max = 1, best_guess = best_guess)
ind_recode_first.sample <-
ind_recode_first %>%
slice(sample(nrow(ind_recode_first), size = nrow(ind_recode_first)/40, replace = FALSE))
choices <-
ind_recode_first.sample %>%
select(choice_rev) %>%
distinct() %>%
arrange(choice_rev)
View(choices)
View(ind_recode_first_d.sample)
head(ind_recode_first_d.sample,5)
head(ind_recode_first_d.sample,1)
head(ind_recode_first_d.sample)
names(ind_recode_first_d.sample)
### 5
add_dummies <- function(data, factor, other_var){
formula <- paste("~ ", factor, " + ", factor, " * " , other_var)
formula <- as.formula(formula)
factor_dummies <- model.matrix(formula, data)
new_data <- as_tibble(factor_dummies[, -1]) %>% select(-c(other_var))
return(new_data)
}
ind_recode_first_d.sample <-
ind_recode_first.sample %>%
add_dummies(factor = "choice_rev", other_var = "score")
choices <-
ind_recode_first.sample %>%
select(choice_rev) %>%
distinct() %>%
arrange(choice_rev)
choices_no_head <-
choices %>% slice(-1)
ind_recode_first_d.sample <-
ind_recode_first.sample %>%
add_dummies(factor = "choice_rev", other_var = "score")
c <- max_log_likelihood(data = ind_recode_first_d.sample,
choices = choices_no_head, times = 10,
beta_start_min = -1, beta_start_max = 1, best_guess = best_guess)
likelihood_logit_ind <- function(X_n, coefficients, choices){
utility_n <- as.matrix(X_n) %*% as.matrix(coefficients)
sum_exp_utility_n <- 0
for (i in 1:length(choices)) {
X_n[1:length(choices)] = 0
X_n[i] = 1
sum_exp_utility_n = sum_exp_utility_n + exp(as.matrix(X_n) %*% as.matrix(coefficients))
}
prob_y_n <- exp(utility_n) / sum_exp_utility_n
prob_y_n[prob_y_n > 0.9999] = 0.9999
prob_y_n[prob_y_n < 0.0001] = 0.0001
return(prob_y_n)
}
### 5
add_dummies <- function(data, factor, other_var){
formula <- paste("~ ", factor, " + ", factor, " * " , other_var)
formula <- as.formula(formula)
factor_dummies <- model.matrix(formula, data)
new_data <- as_tibble(factor_dummies[, -1]) %>% select(-c(other_var))
return(new_data)
}
likelihood_logit_ind <- function(X_n, coefficients, choices){
utility_n <- as.matrix(X_n) %*% as.matrix(coefficients)
sum_exp_utility_n <- 0
for (i in 1:length(choices)) {
X_n[1:length(choices)] = 0
X_n[i] = 1
sum_exp_utility_n = sum_exp_utility_n + exp(as.matrix(X_n) %*% as.matrix(coefficients))
}
prob_y_n <- exp(utility_n) / sum_exp_utility_n
prob_y_n[prob_y_n > 0.9999] = 0.9999
prob_y_n[prob_y_n < 0.0001] = 0.0001
return(prob_y_n)
}
log_likelihood_logit <- function(coefficients, data, choices){
data.list <- split(data, seq(nrow(data)))
prob_y <- sapply(data.list, likelihood_logit_ind, coefficients = coefficients, choices = choices)
log_likelihood <- sum(log(prob_y))
return(log_likelihood)
}
max_log_likelihood <- function(data, choices, times, beta_start_min, beta_start_max, best_guess = ""){
empty_list <- vector(mode = "list", length = times)
if(class(best_guess) == "character"){
start_points <- lapply(empty_list, function(x) runif(n = ncol(data), min = beta_start_min, max = beta_start_max))
results <- lapply(X = start_points, FUN = optim,
fn = log_likelihood_logit,
method = "BFGS",
control = list(maxit = 1000, fnscale = -1),
data = data, choices = choices)
logLik_results <- lapply(results, "[[", 2)
max_logLik <- max(unlist(logLik_results))
positions <- which(unlist(logLik_results) == max_logLik)
best_start_point <- start_points[[positions[1]]]
}
else{
best_start_point <- best_guess
}
best_result <- optim(best_start_point,
fn = log_likelihood_logit,
method = "BFGS",
control = list(trace=6, maxit = 1000, fnscale = -1),
data = data, choices = choices,
hessian = TRUE)
return(best_result)
}
c <- max_log_likelihood(data = ind_recode_first_d.sample,
choices = choices_no_head, times = 10,
beta_start_min = -1, beta_start_max = 1, best_guess = best_guess)
### 4
ind_recode <-
ind_school_program_enter %>%
mutate(scode_rev = substr(schoolcode, 1, 1),
pgm_rev = ifelse(choicepgm == "General Arts" | choicepgm == "Visual Arts", "arts",
ifelse(choicepgm == "Business" | choicepgm == "Home Economics", "economics",
ifelse(choicepgm == "General Science", "science", "others"))),
choice_rev = paste(scode_rev, pgm_rev, sep = "_"))
choice_rev <-
school_program %>%
mutate(scode_rev = substr(schoolcode, 1, 1),
pgm_rev = ifelse(choicepgm == "General Arts" | choicepgm == "Visual Arts", "arts",
ifelse(choicepgm == "Business" | choicepgm == "Home Economics", "economics",
ifelse(choicepgm == "General Science", "science", "others"))),
choice_rev = paste(scode_rev, pgm_rev, sep = "_")) %>%
select(scode_rev, pgm_rev, choice_rev) %>%
distinct()
# choice_rev ~ 0 | score
#rm(list=setdiff(ls(), "ind_recode"))
ind_recode_first <-
ind_recode %>%
filter(school_rank == 1 & program_rank == 1 & !is.na(scode_rev) & !is.na(pgm_rev)) %>%
select(score, pgm_rev) %>%
na.omit
ind_recode_first.sample <-
ind_recode_first %>%
slice(sample(nrow(ind_recode_first), size = nrow(ind_recode_first)/40, replace = FALSE))
ind_recode_first_mlogit.sample <-
mlogit.data(ind_recode_first.sample, choice = "pgm_rev", shape = "wide")
mlogit_result <- mlogit(pgm_rev ~ 0 | score, data = ind_recode_first_mlogit.sample)
best_guess <- summary(mlogit_result)$coefficients
choices <-
ind_recode_first.sample %>%
select(pgm_rev) %>%
distinct() %>%
arrange(pgm_rev)
choices_no_head <-
choices %>% slice(-1)
ind_recode_first_d.sample <-
ind_recode_first.sample %>%
add_dummies(factor = "pgm_rev", other_var = "score")
c <- max_log_likelihood(data = ind_recode_first_d.sample,
choices = choices_no_head, times = 10,
beta_start_min = -1, beta_start_max = 1, best_guess = best_guess)
ind_recode_first.sample <-
ind_recode_first %>%
slice(sample(nrow(ind_recode_first), size = nrow(ind_recode_first)/100, replace = FALSE))
ind_recode_first_mlogit.sample <-
mlogit.data(ind_recode_first.sample, choice = "pgm_rev", shape = "wide")
mlogit_result <- mlogit(pgm_rev ~ 0 | score, data = ind_recode_first_mlogit.sample)
best_guess <- summary(mlogit_result)$coefficients
choices <-
ind_recode_first.sample %>%
select(pgm_rev) %>%
distinct() %>%
arrange(pgm_rev)
choices_no_head <-
choices %>% slice(-1)
ind_recode_first_d.sample <-
ind_recode_first.sample %>%
add_dummies(factor = "pgm_rev", other_var = "score")
c <- max_log_likelihood(data = ind_recode_first_d.sample,
choices = choices_no_head, times = 10,
beta_start_min = -1, beta_start_max = 1, best_guess = best_guess)
View(c)
c$par
best_guess
c <- max_log_likelihood(data = ind_recode_first_d.sample,
choices = choices_no_head, times = 10,
beta_start_min = -1, beta_start_max = 1, best_guess = best_guess)
ind_recode_first.sample <-
ind_recode_first %>%
slice(sample(nrow(ind_recode_first), size = nrow(ind_recode_first)/50, replace = FALSE))
ind_recode_first_mlogit.sample <-
mlogit.data(ind_recode_first.sample, choice = "pgm_rev", shape = "wide")
mlogit_result <- mlogit(pgm_rev ~ 0 | score, data = ind_recode_first_mlogit.sample)
best_guess <- summary(mlogit_result)$coefficients
choices <-
ind_recode_first.sample %>%
select(pgm_rev) %>%
distinct() %>%
arrange(pgm_rev)
choices_no_head <-
choices %>% slice(-1)
ind_recode_first_d.sample <-
ind_recode_first.sample %>%
add_dummies(factor = "pgm_rev", other_var = "score")
c <- max_log_likelihood(data = ind_recode_first_d.sample,
choices = choices_no_head, times = 10,
beta_start_min = -1, beta_start_max = 1, best_guess = best_guess)
### 6
# choice_rev ~ school_quality
ind_recode_quality_first <-
ind_recode %>%
filter(school_rank == 1 & program_rank == 1 & !is.na(scode_rev) & !is.na(pgm_rev)) %>%
left_join(school_quality) %>%
select(score, school_quality) %>%
na.omit
ind_recode_quality_first.sample <-
ind_recode_quality_first %>%
slice(sample(nrow(ind_recode_quality_first), size = nrow(ind_recode_quality_first)/50, replace = FALSE))
ind_recode_quality_first_mlogit <-
mlogit.data(ind_recode_quality_first.sample, choice = "pgm_rev", shape = "wide")
### 6
# choice_rev ~ school_quality
ind_recode_quality_first <-
ind_recode %>%
filter(school_rank == 1 & program_rank == 1 & !is.na(scode_rev) & !is.na(pgm_rev)) %>%
left_join(school_quality) %>%
select(school_quality, pgm_rev) %>%
na.omit
ind_recode_quality_first.sample <-
ind_recode_quality_first %>%
slice(sample(nrow(ind_recode_quality_first), size = nrow(ind_recode_quality_first)/50, replace = FALSE))
ind_recode_quality_first_mlogit <-
mlogit.data(ind_recode_quality_first.sample, choice = "pgm_rev", shape = "wide")
mlogit_result <- mlogit(pgm_rev ~ school_quality, data = ind_recode_quality_first_mlogit)
View(ind_recode_quality_first_mlogit)
View(ind_recode_quality_first.sample)
?mlogit
### 6
# choice_rev ~ school_quality
ind_recode_quality_first <-
ind_recode %>%
filter(school_rank == 1 & program_rank == 1 & !is.na(scode_rev) & !is.na(pgm_rev)) %>%
left_join(school_quality) %>%
select(school_quality, choice_rev) %>%
na.omit
ind_recode_quality_first.sample <-
ind_recode_quality_first %>%
slice(sample(nrow(ind_recode_quality_first), size = nrow(ind_recode_quality_first)/50, replace = FALSE))
ind_recode_quality_first_mlogit <-
mlogit.data(ind_recode_quality_first.sample, choice = "choice_rev", shape = "wide")
mlogit_result <- mlogit(choice_rev ~ school_quality, data = ind_recode_quality_first_mlogit)
choices <-
ind_recode_quality_first.sample %>%
select(choice_rev) %>%
distinct() %>%
arrange(choice_rev)
choices_no_head <-
choices %>% slice(-1)
### 6
# choice_rev ~ school_quality
ind_recode_quality_first <-
ind_recode %>%
filter(school_rank == 1 & program_rank == 1 & !is.na(scode_rev) & !is.na(pgm_rev)) %>%
left_join(school_quality) %>%
select(school_quality, choice_rev) %>%
na.omit
ind_recode_quality_first.sample <-
ind_recode_quality_first %>%
slice(sample(nrow(ind_recode_quality_first), size = nrow(ind_recode_quality_first)/50, replace = FALSE))
choices <-
ind_recode_quality_first.sample %>%
select(choice_rev) %>%
distinct() %>%
arrange(choice_rev)
View(choices)
### 4
ind_recode <-
ind_school_program_enter %>%
mutate(scode_rev = substr(schoolcode, 1, 3),
pgm_rev = ifelse(choicepgm == "General Arts" | choicepgm == "Visual Arts", "arts",
ifelse(choicepgm == "Business" | choicepgm == "Home Economics", "economics",
ifelse(choicepgm == "General Science", "science", "others"))),
choice_rev = paste(scode_rev, pgm_rev, sep = "_"))
choice_rev <-
school_program %>%
mutate(scode_rev = substr(schoolcode, 1, 3),
pgm_rev = ifelse(choicepgm == "General Arts" | choicepgm == "Visual Arts", "arts",
ifelse(choicepgm == "Business" | choicepgm == "Home Economics", "economics",
ifelse(choicepgm == "General Science", "science", "others"))),
choice_rev = paste(scode_rev, pgm_rev, sep = "_")) %>%
select(scode_rev, pgm_rev, choice_rev) %>%
distinct()
### 6
# choice_rev ~ school_quality
ind_recode_quality_first <-
ind_recode %>%
filter(school_rank == 1 & program_rank == 1 & !is.na(scode_rev) & !is.na(pgm_rev)) %>%
left_join(school_quality) %>%
select(school_quality, choice_rev) %>%
na.omit
ind_recode_quality_first.sample <-
ind_recode_quality_first %>%
slice(sample(nrow(ind_recode_quality_first), size = nrow(ind_recode_quality_first)/50, replace = FALSE))
ind_recode_quality_first_mlogit <-
mlogit.data(ind_recode_quality_first.sample, choice = "choice_rev", shape = "wide")
mlogit_result <- mlogit(choice_rev ~ school_quality, data = ind_recode_quality_first_mlogit)
choices <-
ind_recode_quality_first.sample %>%
select(choice_rev) %>%
distinct() %>%
arrange(choice_rev)
choices_no_head <-
choices %>% slice(-1)
mlogit_result <- mlogit(choice_rev ~ school_quality, data = ind_recode_quality_first_mlogit)
### 4
ind_recode <-
ind_school_program_enter %>%
mutate(scode_rev = substr(schoolcode, 1, 3),
pgm_rev = ifelse(choicepgm == "General Arts" | choicepgm == "Visual Arts", "arts", "others"),
#                                   ifelse(choicepgm == "Business" | choicepgm == "Home Economics", "economics",
#                                          ifelse(choicepgm == "General Science", "science", "others"))),
choice_rev = paste(scode_rev, pgm_rev, sep = "_"))
choice_rev <-
school_program %>%
mutate(scode_rev = substr(schoolcode, 1, 3),
pgm_rev = ifelse(choicepgm == "General Arts" | choicepgm == "Visual Arts", "arts", "others"),
#                                   ifelse(choicepgm == "Business" | choicepgm == "Home Economics", "economics",
#                                          ifelse(choicepgm == "General Science", "science", "others"))),
choice_rev = paste(scode_rev, pgm_rev, sep = "_")) %>%
select(scode_rev, pgm_rev, choice_rev) %>%
distinct()
View(ind_recode)
### 6
# choice_rev ~ school_quality
ind_recode_quality_first <-
ind_recode %>%
filter(school_rank == 1 & program_rank == 1 & !is.na(scode_rev) & !is.na(pgm_rev)) %>%
left_join(school_quality, by = schoolcode) %>%
select(school_quality, choice_rev) %>%
na.omit
View(ind_recode)
### 6
# choice_rev ~ school_quality
ind_recode_quality_first <-
ind_recode %>%
filter(school_rank == 1 & program_rank == 1 & !is.na(scode_rev) & !is.na(pgm_rev)) %>%
left_join(school_quality, by = "schoolcode") %>%
select(school_quality, choice_rev) %>%
na.omit
View(ind_recode_quality_first)
ind_recode_quality_first.sample <-
ind_recode_quality_first %>%
slice(sample(nrow(ind_recode_quality_first), size = nrow(ind_recode_quality_first)/50, replace = FALSE))
ind_recode_quality_first_mlogit <-
mlogit.data(ind_recode_quality_first.sample, choice = "choice_rev", shape = "wide")
mlogit_result <- mlogit(choice_rev ~ school_quality, data = ind_recode_quality_first_mlogit)
gc()
ind_recode_quality_first.sample <-
ind_recode_quality_first %>%
slice(sample(nrow(ind_recode_quality_first), size = nrow(ind_recode_quality_first)/100, replace = FALSE))
ind_recode_quality_first_mlogit <-
mlogit.data(ind_recode_quality_first.sample, choice = "choice_rev", shape = "wide")
mlogit_result <- mlogit(choice_rev ~ school_quality, data = ind_recode_quality_first_mlogit)
