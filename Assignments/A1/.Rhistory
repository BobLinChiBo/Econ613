mutate(change_work_this_year = cahnge_profession_this_year | change_empstat_this_year) %>%
relocate(idind,profession,profession_last_year,cahnge_profession_this_year )
change_work_migration_by_year <-
data_change_work_by_year %>%
ungroup() %>%
filter(change_work_this_year == TRUE) %>%
filter(year_is_datent == TRUE)
aaaaadata_change_work_migration_by_year %>%
distinct(idmen,year) %>%
count(year)
data_change_work_migration_by_year %>%
distinct(idmen,year) %>%
count(year)
?lag
?match
# Compare year by year
data_change_work_by_year <-
data_datent %>%
group_by(idind) %>%
arrange(year) %>%
mutate(profession_last_year = lag(profession, order_by = year)) %>%
mutate(empstat_last_year = lag(empstat, order_by = year)) %>%
mutate(cahnge_profession_this_year = profession != lag(profession, order_by = year)) %>%
mutate(change_empstat_this_year = empstat != lag(empstat, order_by = year)) %>%
mutate(change_work_this_year = cahnge_profession_this_year | change_empstat_this_year) %>%
relocate(idind,profession,profession_last_year,cahnge_profession_this_year )
change_work_migration_by_year <-
data_change_work_by_year %>%
ungroup() %>%
filter(change_work_this_year == TRUE) %>%
filter(year_is_datent == TRUE)
data_change_work_migration_by_year %>%
distinct(idmen,year) %>%
count(year)
a2019 <- data_change_work_migration_by_year %>%
distinct(idmen,year) %>% filter(year==2019) %>% pull(idmen)
ccc <- a2019 %in% b2019
a2019[!ccc]
View(a)
ncp<-matrix(nrow=15,ncol=2)
ncp[1:15,1]<-2005:2019
for (i in 2004:2018) {
data35<-subset(data_datent, (year==i | year==i+1))
a <- data35 %>% group_by(idind) %>%
mutate(nc=(profession[2]!=profession[1]),np=empstat[2] != empstat[1])
a1 <- subset(a, nc | np)
a2 <- subset(a1, year_is_datent == TRUE)
ncp[i-2003,2]<-n_distinct(a2$idmen)
}
i=2018
data35<-subset(data_datent, (year==i | year==i+1))
a <- data35 %>% group_by(idind) %>%
mutate(nc=(profession[2]!=profession[1]),np=empstat[2] != empstat[1])
View(a)
View(data_change_work_by_year)
cc <- b2019 %in% a2019
b2019[!cc]
ncp<-matrix(nrow=15,ncol=2)
ncp[1:15,1]<-2005:2019
for (i in 2004:2018) {
data35<-subset(data_datent, (year==i | year==i+1))
a <- data35 %>% group_by(idind) %>%
mutate(nc=(profession[2]!=profession[1]),np=empstat[2] != empstat[1])
a1 <- subset(a, nc | np)
a2 <- subset(a1, year_is_datent == TRUE & year == i+1)
ncp[i-2003,2]<-n_distinct(a2$idmen)
}
ncp<-matrix(nrow=15,ncol=2)
ncp[1:15,1]<-2005:2019
for (i in 2004:2018) {
data35<-subset(data_datent, (year==i | year==i+1))
a <- data35 %>% group_by(idind) %>%
mutate(nc=(profession[2]!=profession[1]),np=empstat[2] != empstat[1])
a1 <- subset(a, nc | np)
a2 <- subset(a1, year_is_datent == TRUE)
a3 <- subset(a2, year == i+1)
ncp[i-2003,2]<-n_distinct(a2$idmen)
}
ncp
ncp<-matrix(nrow=15,ncol=2)
ncp[1:15,1]<-2005:2019
for (i in 2004:2018) {
data35<-subset(data_datent, (year==i | year==i+1))
a <- data35 %>% group_by(idind) %>%
mutate(nc=(profession[2]!=profession[1]),np=empstat[2] != empstat[1])
a1 <- subset(a, nc | np)
a2 <- subset(a1, year_is_datent == TRUE)
a3 <- subset(a2, year == 2)
ncp[i-2003,2]<-n_distinct(a2$idmen)
}
### Exercise 2
## 2.1.1
years = 2004:2019
filenames = paste(rep("datind", length(years)), years, ".csv", sep = "")
data_ind <- map_dfr(filenames, read_datind)
data_ind_clear <- # delete duplicate data
data_ind %>%
arrange(idmen) %>% # distinct() select the first one of duplicates
distinct(idind, year, .keep_all = TRUE)
## 2.1.2
filenames = paste(rep("dathh", length(years)), years, ".csv", sep = "")
data_hh <- map_dfr(filenames, read_dathh)
## 2.1.3
tbl_vars(data_ind)[tbl_vars(data_ind_clear) %in% tbl_vars(data_hh)]
## 2.1.4
data_merged <- left_join(data_ind_clear, data_hh, by = c("idmen", "year"))
## 3.2
data_datent <-
data_merged %>%
mutate(year_is_datent = (datent == year))
for (i in 2004:2018) {
data35<-subset(data_datent, (year==i | year==i+1))
a <- data35 %>% group_by(idind) %>%
mutate(nc=(profession[2] != profession[1]),np = empstat[2] != empstat[1])
a1 <- subset(a, nc | np)
a2 <- subset(a1, year_is_datent == TRUE & year == i+1)
ncp[i-2003,2]<-n_distinct(a2$idmen)
}
ncp
# Compare year by year
last_year_profession <-
data_datent %>%
group_by(idind) %>%
mutate(year = year+1, last_year_profession = profession)
?left_join
# Compare year by year
data_last_year_profession <-
data_datent %>%
group_by(idind) %>%
mutate(year = year+1, last_year_profession = profession) %>%
select(year, idind, last_year_profession)
View(data_last_year_profession)
# Compare year by year
data_last_year_profession <-
data_datent %>%
group_by(idind) %>%
mutate(year = year+1, last_year_profession = profession) %>%
select(year, idind, last_year_profession)
# Compare year by year
data_last_year_profession <-
data_datent %>%
group_by(idind) %>%
mutate(year = year+1, last_year_profession = profession) %>%
select(year, idind, last_year_profession) %>%
left_join(idind, by = c("idind", "year"))
# Compare year by year
data_last_year_profession <-
data_datent %>%
group_by(idind) %>%
mutate(year = year+1, last_year_profession = profession) %>%
select(year, idind, last_year_profession) %>%
left_join(data_datent, by = c("idind", "year"))
View(data_last_year_profession)
# Compare year by year
data_last_year_profession <-
data_datent %>%
group_by(idind) %>%
mutate(year = year+1, last_year_profession = profession) %>%
select(year, idind, last_year_profession) %>%
right_join(data_datent, by = c("idind", "year"))
View(data_last_year_profession)
# Compare year by year
data_last_year_work <-
data_datent %>%
group_by(idind) %>%
mutate(year = year+1,
profession_last_year = profession,
empstat_last_year = empstat) %>%
select(year, idind, profession_last_year, empstat_last_year) %>%
right_join(data_datent, by = c("idind", "year"))
data_change_work_by_year <-
data_last_year_work %>%
group_by(idind) %>%
mutate(cahnge_profession_this_year = profession != profession_last_year) %>%
mutate(change_empstat_this_year = empstat != empstat_last_year) %>%
mutate(change_work_this_year = cahnge_profession_this_year | change_empstat_this_year)
data_change_work_by_year <-
data_last_year_work %>%
mutate(cahnge_profession_this_year = profession != profession_last_year) %>%
mutate(change_empstat_this_year = empstat != empstat_last_year) %>%
mutate(change_work_this_year = cahnge_profession_this_year | change_empstat_this_year)
change_work_migration_by_year <-
data_change_work_by_year %>%
ungroup() %>%
filter(change_work_this_year == TRUE) %>%
filter(year_is_datent == TRUE)
data_change_work_migration_by_year %>%
distinct(idmen,year) %>%
count(year)
ncp
data_change_work_by_year <-
data_last_year_work %>%
mutate(cahnge_profession_this_year = profession != profession_last_year) %>%
mutate(change_empstat_this_year = empstat != empstat_last_year) %>%
mutate(change_work_this_year = cahnge_profession_this_year | change_empstat_this_year)
change_work_migration_by_year <-
data_change_work_by_year %>%
ungroup() %>%
filter(change_work_this_year == TRUE) %>%
filter(year_is_datent == TRUE)
data_change_work_migration_by_year %>%
distinct(idmen,year) %>%
count(year)
ncp
View(data_last_year_work)
a2019 <- change_work_migration_by_year$idmen
ccc <- a2019 %in% b2019
a[!ccc]
a2019[!ccc]
change_work_migration_by_year %>%
distinct(idmen,year) %>%
count(year)
change_work_migration_by_year <-
data_change_work_by_year %>%
ungroup() %>%
filter(change_work_this_year == TRUE) %>%
filter(year_is_datent == TRUE)
ncp
## 3.5
data_last_year_work <-
data_datent %>%
group_by(idind) %>%
mutate(year = year + 1,
profession_last_year = profession,
empstat_last_year = empstat) %>%
select(year, idind, profession_last_year, empstat_last_year) %>%
right_join(data_datent, by = c("idind", "year"))
data_change_work_by_year <-
data_last_year_work %>%
mutate(cahnge_profession_this_year = profession != profession_last_year) %>%
mutate(change_empstat_this_year = empstat != empstat_last_year) %>%
mutate(change_work_this_year = cahnge_profession_this_year | change_empstat_this_year)
change_work_migration_by_year <-
data_change_work_by_year %>%
ungroup() %>%
filter(change_work_this_year == TRUE) %>%
filter(year_is_datent == TRUE)
change_work_migration_by_year %>%
distinct(idmen,year) %>%
count(year)
## 2.2.7
household_2011_12 <-
data_merged %>%
filter(year == 2010 & year == 2011) %>%
distinct(idmen, year)
household_2011_12 %>% nrow()
View(data_merged)
## 2.2.7
household_2010 <- data_merged %>% filter(year == 2010) %>% distinct(idmen)
household_2011 <- data_merged %>% filter(year == 2011) %>% distinct(idmen)
household_2011_12 <- household_2010 %>% filter(household_2010 %in% household_2011)
household_2011_12 %>% nrow()
## 2.2.7
household_2010 <- data_merged %>% filter(year == 2010) %>% distinct(idmen)
household_2011 <- data_merged %>% filter(year == 2011) %>% distinct(idmen)
## 2.2.7
household_2010 <- data_merged %>% filter(year == 2010) %>% select(idmen)
household_2011 <- data_merged %>% filter(year == 2011) %>% select(idmen)
household_2011_12 <- household_2010 %>% filter(household_2010 %in% household_2011)
household_2011_12 %>% nrow()
## 2.2.7
household_2010 <- data_merged %>% filter(year == 2010) %>% pull(idmen)
household_2011 <- data_merged %>% filter(year == 2011) %>% pull(idmen)
household_2011_12 <- household_2010 %>% filter(household_2010 %in% household_2011)
## 2.2.7
household_2010 <- data_merged %>% filter(year == 2010) %>% pull(idmen)
household_2011 <- data_merged %>% filter(year == 2011) %>% pull(idmen)
household_2011_12 <- household_2010[household_2010 %in% household_2011]
household_2011_12 %>% nrow()
household_2010 %in% household_2011
sum(household_2010 %in% household_2011)
household_2010[household_2010 %in% household_2011]
household_2010_11 <- household_2010[household_2010 %in% household_2011]
household_2010_11 %>% nrow()
## 2.2.7
household_2010 <- data_merged %>% filter(year == 2010) %>% select(idmen)
household_2011 <- data_merged %>% filter(year == 2011) %>% select(idmen)
## 2.2.7
household_2010 <- data_merged %>% filter(year == 2010) %>% select(idmen)
household_2011 <- data_merged %>% filter(year == 2011) %>% select(idmen)
household_2010_11 <- household_2010 %>%  filter(household_2010 %in% household_2011)
household_2010 %in% household_2011
length(household_2011_11)
## 2.2.7
household_2010 <- data_merged %>% filter(year == 2010) %>% pull(idmen)
household_2011 <- data_merged %>% filter(year == 2011) %>% pull(idmen)
household_2010_11 <- household_2010[household_2010 %in% household_2011]
length(household_2010_11)
### Exercise 3
## 3.1
# Note that there are 2 households that are in the "datind" data set but not in the "dathh" data set,
data_ind %>%
filter(! (idmen %in% data_hh$idmen)) %>%
distinct(idmen)
# while all households in the "dathh" data set are in the "datind" data set.
data_hh %>%
filter(! (idmen %in% data_ind$idmen)) %>%
distinct(idmen)
temp_data %>%
count(profession, gender)
pivot_wider(names_from = gender,values_from = n)
temp_data %>%
count(profession, gender) %>%
pivot_wider(names_from = gender,values_from = n)
?group_by
## 2.2.3
profession_household <-
data_merged %>%
filter(!is.na(profession)) %>%
distinct(idind, idmen, year, profession) %>%
count(idmen, year, profession, sort = TRUE) %>%
filter(n >= 2) %>%
distinct(idmen, year)
profession_household %>% nrow()
# Count per year
profession_household %>% count(year)
## 2.2.1
large_household <-
data_merged %>%
distinct(idind, idmen, year) %>%
count(idmen, year, sort = TRUE) %>%
filter(n >= 4)
# Total frequency
large_household %>% nrow()
# Total distinct
large_household %>% n_distinct(idmen)
View(large_household)
View(large_household)
# Total distinct
large_household %>% select(idmen) %>% n_distinct()
# Count per year
large_household %>% count(year)
# Total frequency
large_household %>% nrow()
# Total distinct
large_household %>% select(idmen) %>% n_distinct()
# Count per year
large_household %>% count(year)
## 2.2.2
unemployed_household <-
data_merged %>%
filter(empstat == "Unemployed") %>%
distinct(idind, idmen, year) %>%
count(idmen, year, sort = TRUE) %>%
filter(n >= 1)
# Total frequency
unemployed_household %>% nrow()
# Total distinct
unemployed_household %>% select(idmen) %>% n_distinct()
# Count per year
unemployed_household %>% count(year)
## 2.2.3
profession_household <-
data_merged %>%
filter(!is.na(profession)) %>%
distinct(idind, idmen, year, profession) %>%
count(idmen, year, profession, sort = TRUE) %>%
filter(n >= 2) %>%
distinct(idmen, year)
# Total frequency
profession_household %>% nrow()
# Total distinct
profession_household %>% select(idmen) %>% n_distinct()
# Count per year
profession_household %>% count(year)
## 2.2.4
kids_ind <-
data_merged %>%
filter(mstatus == "Couple, with Kids") %>%
distinct(idind, year)
kids_ind %>% nrow()
# Total frequency
kids_ind %>% nrow()
## 2.2.4
kids_ind <-
data_merged %>%
filter(mstatus == "Couple, with Kids") %>%
distinct(idind, year)
# Total frequency
kids_ind %>% nrow()
# Total distinct
kids_ind %>% select(idind) %>% n_distinct()
# Count per year
kids_ind  %>% count(year)
## 2.2.5
Paris_ind <-
data_merged %>%
filter(location == "Paris") %>%
distinct(idind, year)
# Total frequency
Paris_ind %>% nrow()
# Total distinct
Paris_ind %>% select(idind) %>% n_distinct()
# Count per year
Paris_ind  %>% count(year)
## 2.2.6
data_merged %>%
distinct(idind, idmen, year) %>%
count(idmen, year, sort = TRUE) %>%
slice_head() %>%
pull(idmen) %>%
as.character()
## 2.2.6
data_merged %>%
distinct(idind, idmen, year) %>%
count(idmen, year, sort = TRUE)
## 2.2.6
data_merged %>%
distinct(idind, idmen, year) %>%
count(idmen, year, sort = TRUE) %>%
slice_max(n)
## 2.2.7
household_2010 <- data_merged %>% filter(year == 2010) %>% pull(idmen)
household_2011 <- data_merged %>% filter(year == 2011) %>% pull(idmen)
household_2010_11 <- household_2010[household_2010 %in% household_2011]
length(household_2010_11)
### Exercise 3
## 3.1
# Note that there are 2 households that are in the "datind" data set but not in the "dathh" data set,
data_ind %>%
filter(! (idmen %in% data_hh$idmen)) %>%
distinct(idmen)
# while all households in the "dathh" data set are in the "datind" data set.
data_hh %>%
filter(! (idmen %in% data_ind$idmen)) %>%
distinct(idmen)
# Since the question focus on the households, we use the "dathh" data set , rather than the merged one.
household_group <-
data_hh %>%
group_by(idmen) %>%
arrange(year)
year_enter_hh <-
household_group %>%
filter(row_number()==1) %>%
mutate(year_enter = year) %>%
select(idmen, year_enter)
year_exit_hh <-
household_group %>%
filter(row_number()==n()) %>%
mutate(year_exit = year + 1) %>%
select(idmen, year_exit)
years_in_survey <-
left_join(year_enter_hh, year_exit_hh)  %>%
mutate(years_in_survey = year_exit - year_enter)
# Check if gap year
years_in_survey <-
household_group %>%
summarise(length = n()) %>%
mutate(year_enter = year_enter_hh$year_enter,
year_exit = year_exit_hh$year_exit,
years_in_survey = years_in_survey$years_in_survey) %>%
mutate(gap = length < years_in_survey)
years_in_survey %>%
filter(gap == TRUE) %>%
nrow()
# Plot the distributions of the time spent in the panel but consider different cases:
# consecutive years: only count consecutive years and ignore any household with gap year
# total years: count the total years a household spent in the panel regardless there is a gap year or not
years_in_survey %>%
filter(gap == FALSE) %>%
ggplot() +
geom_density(aes(x = years_in_survey, color="consecutive years"), bw = 0.5) +
geom_density(data = years_in_survey, aes(x = length, color="total years"), bw = 0.5) +
scale_color_manual("", breaks=c("consecutive years", "total years"), values = c("blue","red")) +
guides(color = guide_legend(override.aes = list(fill = c("blue", "red"))))
## 3.2
data_datent <-
data_merged %>%
mutate(year_is_datent = (datent == year))
# Report first ten observations
data_datent %>%
select(idind, idmen, year, datent, year_is_datent) %>%
slice(1:10)
# Report share per year
datent_percentage <-
data_datent %>%
group_by(year) %>%
summarise(datent_rate = mean(year_is_datent, na.rm=TRUE))
datent_percentage %>%
ggplot(aes(x = year, y = datent_rate)) +
geom_line()
## 3.3
data_migration <-
data_merged %>%
mutate(migration = ((myear == year) & !is.na(myear)) | ((move == 2)& !is.na(move))) %>%
mutate(migration = ifelse( is.na(myear) & is.na(move) , NA, migration))
# Report first ten observations
data_migration %>%
select(idind, idmen, year, myear, move, migration) %>%
slice(1:10)
# Report share per year
migration_percentage <-
data_migration %>%
group_by(year) %>%
summarise(migration_rate = mean(migration, na.rm = TRUE))
migration_percentage %>%
ggplot(aes(x = year, y = migration_rate)) +
geom_line()
## 3.4
left_join(datent_percentage, migration_percentage) %>%
ggplot(aes(x = year)) +
geom_line(aes(y = datent_rate), color = "red") +
geom_line(aes(y = migration_rate), color = "blue")
## 3.5
data_last_year_work <-
data_datent %>%
group_by(idind) %>%
mutate(year = year + 1,
profession_last_year = profession,
empstat_last_year = empstat) %>%
select(year, idind, profession_last_year, empstat_last_year) %>%
right_join(data_datent, by = c("idind", "year"))
